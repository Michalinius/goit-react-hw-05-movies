{"version":3,"file":"static/js/239.5ce3b101.chunk.js","mappings":"mOACA,GAAgB,UAAY,oCAAoC,KAAO,+BAA+B,KAAO,+BAA+B,gBAAkB,0CAA0C,SAAW,oC,SCmEnN,EA/DyB,WAErB,OAAwBA,EAAAA,EAAAA,UAAS,MAAK,eAA/BC,EAAI,KAAEC,EAAO,KACZC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BH,EAAAA,EAAAA,UAAS,MAAK,eAAjCK,EAAK,KAAEC,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACFN,IACAO,EAAAA,EAAAA,IAAgBP,GAASQ,MAAK,SAAAC,GAAG,OAAIN,EAASM,EAAI,GAC1D,GAAG,CAACT,KAEJM,EAAAA,EAAAA,YAAU,WACFF,EAASM,OACTX,EAAQK,EAASM,MAAMC,KAC/B,GAAG,CAACP,IAECF,GAGD,+BACI,4BACI,SAAC,KAAI,CAACU,GAAId,EAAK,sBACf,iBAAKe,UAAWC,EAAAA,UAAiB,WAC7B,gBACIC,IAAG,0CAAqCb,EAAMc,aAC9CC,IAAG,UAAU,OAALf,QAAK,IAALA,OAAK,EAALA,EAAOgB,OACfC,MAAM,SAEV,iBAAKN,UAAWC,EAAAA,KAAY,WACxB,0BACKZ,EAAMgB,MAAK,KAAS,OAALhB,QAAK,IAALA,OAAK,EAALA,EAAOkB,aAAaC,MAAM,EAAG,GAAE,QAEnD,wCACiBC,OAAOC,WAAiC,IAAjB,OAALrB,QAAK,IAALA,OAAK,EAALA,EAAOsB,eAAmBC,QAAQ,GAAE,QAEvE,eAAIZ,UAAWC,EAAAA,SAAgB,uBAC/B,uBAAS,OAALZ,QAAK,IAALA,OAAK,EAALA,EAAOwB,YACX,eAAIb,UAAWC,EAAAA,OAAc,qBAC7B,uBACKZ,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAG,aAIvD,iBAAKjB,UAAWC,EAAAA,gBAAuB,WACnC,cAAGD,UAAWC,EAAAA,UAAiB,qCAC/B,2BACI,eAAID,UAAWC,EAAAA,SAAgB,UAC3B,SAAC,KAAI,CAACF,GAAG,OAAM,qBAEnB,eAAIC,UAAWC,EAAAA,SAAgB,UAC3B,SAAC,KAAI,CAACF,GAAG,UAAS,8BAI9B,SAAC,EAAAmB,SAAQ,CAACC,SAAU,iBAAiB,UACjC,SAAC,KAAM,WAvCJ,aA4CvB,C,sLChEMC,EAAO,mCAEAC,EAAW,yCAAG,yGACFC,EAAAA,EAAAA,IAAU,yDAAD,OAA0DF,IAAU,OAAtF,OAANG,EAAM,yBACLA,EAAOC,MAAI,2CACrB,kBAHuB,mCAKXC,EAAe,yCAAG,WAAOC,GAAK,4FAClBJ,EAAAA,EAAAA,IAAU,qDAAD,OAAsDF,EAAO,wCAAgCM,EAAK,wBAAsB,OAA1I,OAANH,EAAM,yBACLA,EAAOC,MAAI,2CACrB,gBAH2B,sCAKf9B,EAAe,yCAAG,WAAOiC,GAAE,4FACfL,EAAAA,EAAAA,IAAU,sCAAD,OAAuCK,EAAE,oBAAYP,EAAO,qBAAmB,OAAjG,OAANG,EAAM,yBACLA,EAAOC,MAAI,2CACrB,gBAH2B,sCAKfI,EAAe,yCAAG,WAAOD,GAAE,4FACfL,EAAAA,EAAAA,IAAU,sCAAD,OAAuCK,EAAE,4BAAoBP,EAAO,oBAAkB,OAAxG,OAANG,EAAM,yBACLA,EAAOC,MAAI,2CACrB,gBAH2B,sCAKfK,EAAe,yCAAG,WAAOF,GAAE,4FACfL,EAAAA,EAAAA,IAAU,sCAAD,OAAuCK,EAAE,4BAAoBP,EAAO,2BAAyB,OAA/G,OAANG,EAAM,yBACLA,EAAOC,MAAI,2CACrB,gBAH2B,qC","sources":["webpack://goit-react-hw-05-movies/./src/components/moviesDetailsPage/movieDetailsPage.module.css?610e","components/moviesDetailsPage/MovieDetailsPage.jsx","utils/API/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movieDetailsPage_container__0EeV1\",\"link\":\"movieDetailsPage_link__B1xcI\",\"info\":\"movieDetailsPage_info__2C364\",\"additional_info\":\"movieDetailsPage_additional_info__6REdp\",\"itemLink\":\"movieDetailsPage_itemLink__1R9gj\"};","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../utils/API/api';\nimport styles from \"./movieDetailsPage.module.css\"\n\nconst MovieDetailsPage = () => {\n\n    const [link, setLink] = useState(null)\n    const { movieId } = useParams()\n    const [movie, setMovie] = useState(null)\n    const location = useLocation();\n\n    useEffect(() => {\n        if (movieId)\n            getMovieDetails(movieId).then(res => setMovie(res))\n    }, [movieId])\n\n    useEffect(() => {\n        if (location.state)\n            setLink(location.state.from)\n    }, [location])\n\n    if (!movie) return \"Please wait\"\n\n    return (\n        <>\n            <div>\n                <Link to={link}>Go back</Link>\n                <div className={styles.container}>\n                    <img\n                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                        alt={`${movie?.title}`}\n                        width=\"200\"\n                    />\n                    <div className={styles.info}>\n                        <h2>\n                            {movie.title} ({movie?.release_date.slice(0, 4)})\n                        </h2>\n                        <p>\n                            User Score: {Number.parseFloat(movie?.vote_average * 10).toFixed(0)}%\n                        </p>\n                        <h3 className={styles.overview}>Overview</h3>\n                        <p>{movie?.overview}</p>\n                        <h3 className={styles.genres}>Genres</h3>\n                        <p>\n                            {movie.genres.map(genre => genre.name + \" \")}\n                        </p>\n                    </div>\n                </div>\n                <div className={styles.additional_info}>\n                    <p className={styles.paragraph}>Additional Information</p>\n                    <ul>\n                        <li className={styles.itemLink}>\n                            <Link to=\"cast\">Cast</Link>\n                        </li>\n                        <li className={styles.itemLink}>\n                            <Link to=\"reviews\">Reviews</Link>\n                        </li>\n                    </ul>\n                </div>\n                <Suspense fallback={\"Please wait...\"}>\n                    <Outlet />\n                </Suspense>\n            </div>\n        </>\n    );\n}\n\nexport default MovieDetailsPage\n","import axios from \"axios\";\n\nconst API_KEY = `248e8290b0e557773220f75ff679d721`;\n\nexport const getTrending = async () => {\n    const movies = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n    return movies.data\n}\n\nexport const getMovieByQuery = async (query) => {\n    const movies = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`)\n    return movies.data\n}\n\nexport const getMovieDetails = async (id) => {\n    const movies = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US}`)\n    return movies.data\n}\n\nexport const getMovieCredits = async (id) => {\n    const movies = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return movies.data\n}\n\nexport const getMovieReviews = async (id) => {\n    const movies = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return movies.data\n}"],"names":["useState","link","setLink","movieId","useParams","movie","setMovie","location","useLocation","useEffect","getMovieDetails","then","res","state","from","to","className","styles","src","poster_path","alt","title","width","release_date","slice","Number","parseFloat","vote_average","toFixed","overview","genres","map","genre","name","Suspense","fallback","API_KEY","getTrending","axios","movies","data","getMovieByQuery","query","id","getMovieCredits","getMovieReviews"],"sourceRoot":""}